{"ast":null,"code":"var _jsxFileName = \"/home/charlie/Documents/projects/icsm/icsm_web/src/react/R_components/Video.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Video = props => {\n  const srcFull = 'https://www.youtube.com/embed/' + props.src;\n  console.log(props.external_url_list); // const externalLinkList = props.external_url_list.map(e => <a href={e.url} target='_blank' className=\"video-section-link\">{e.title}</a>);\n\n  if (props.external_link_url != null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video\",\n      id: props.src,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"video-section-title\",\n        children: props.videoTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"iframe-container\",\n        children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n          type: \"text/html\",\n          frameborder: \"0\",\n          allowfullscreen: \"\",\n          src: srcFull,\n          gesture: \"media\",\n          allow: \"encrypted-media\",\n          frameborder: \"2\",\n          allowfullscreen: \"allowfullscreen\",\n          webkitallowfullscreen: true,\n          mozallowfullscreen: true,\n          oallowfullscreen: true,\n          msallowfullscreen: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-description\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"video-section-title\",\n          children: \"Useful Links\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video\",\n      id: props.src,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"video-section-title\",\n        children: props.videoTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"iframe-container\",\n        children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n          type: \"text/html\",\n          frameborder: \"0\",\n          allowfullscreen: \"\",\n          src: srcFull,\n          gesture: \"media\",\n          allow: \"encrypted-media\",\n          frameborder: \"2\",\n          allowfullscreen: \"allowfullscreen\",\n          webkitallowfullscreen: true,\n          mozallowfullscreen: true,\n          oallowfullscreen: true,\n          msallowfullscreen: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this);\n  }\n};\n\n_c = Video;\nexport default Video;\n\nvar _c;\n\n$RefreshReg$(_c, \"Video\");","map":{"version":3,"sources":["/home/charlie/Documents/projects/icsm/icsm_web/src/react/R_components/Video.js"],"names":["React","Video","props","srcFull","src","console","log","external_url_list","external_link_url","videoTitle"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAGA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AACnB,QAAMC,OAAO,GAAG,mCAAmCD,KAAK,CAACE,GAAzD;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACK,iBAAlB,EAFmB,CAGnB;;AAEA,MAAIL,KAAK,CAACM,iBAAN,IAA2B,IAA/B,EAAoC;AAChC,wBACA;AAAK,MAAA,SAAS,EAAC,OAAf;AAAuB,MAAA,EAAE,EAAEN,KAAK,CAACE,GAAjC;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,qBAAd;AAAA,kBAAqCF,KAAK,CAACO;AAA3C;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,+BACI;AAAQ,UAAA,IAAI,EAAC,WAAb;AAAyB,UAAA,WAAW,EAAC,GAArC;AAAyC,UAAA,eAAe,EAAC,EAAzD;AAA4D,UAAA,GAAG,EAAEN,OAAjE;AAA0E,UAAA,OAAO,EAAC,OAAlF;AAA2F,UAAA,KAAK,EAAC,iBAAjG;AAAmH,UAAA,WAAW,EAAC,GAA/H;AAAmI,UAAA,eAAe,EAAC,iBAAnJ;AAAqK,UAAA,qBAAqB,MAA1L;AAA2L,UAAA,kBAAkB,MAA7M;AAA8M,UAAA,gBAAgB,MAA9N;AAA+N,UAAA,iBAAiB;AAAhP;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ,eAKI;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,+BACI;AAAI,UAAA,SAAS,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAYH,GAbD,MAcI;AACA,wBACA;AAAK,MAAA,SAAS,EAAC,OAAf;AAAuB,MAAA,EAAE,EAAED,KAAK,CAACE,GAAjC;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,qBAAd;AAAA,kBAAqCF,KAAK,CAACO;AAA3C;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,+BACI;AAAQ,UAAA,IAAI,EAAC,WAAb;AAAyB,UAAA,WAAW,EAAC,GAArC;AAAyC,UAAA,eAAe,EAAC,EAAzD;AAA4D,UAAA,GAAG,EAAEN,OAAjE;AAA0E,UAAA,OAAO,EAAC,OAAlF;AAA2F,UAAA,KAAK,EAAC,iBAAjG;AAAmH,UAAA,WAAW,EAAC,GAA/H;AAAmI,UAAA,eAAe,EAAC,iBAAnJ;AAAqK,UAAA,qBAAqB,MAA1L;AAA2L,UAAA,kBAAkB,MAA7M;AAA8M,UAAA,gBAAgB,MAA9N;AAA+N,UAAA,iBAAiB;AAAhP;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAQH;AACJ,CA7BD;;KAAMF,K;AA+BN,eAAeA,KAAf","sourcesContent":["import React from 'react';\n\n\nconst Video = props => {\n    const srcFull = 'https://www.youtube.com/embed/' + props.src;\n    console.log(props.external_url_list)\n    // const externalLinkList = props.external_url_list.map(e => <a href={e.url} target='_blank' className=\"video-section-link\">{e.title}</a>);\n\n    if (props.external_link_url != null){\n        return (\n        <div className='video' id={props.src}>\n            <h3 className=\"video-section-title\">{props.videoTitle}</h3>\n            <div className=\"iframe-container\">\n                <iframe type=\"text/html\" frameborder=\"0\" allowfullscreen=\"\" src={srcFull} gesture=\"media\"  allow=\"encrypted-media\" frameborder=\"2\" allowfullscreen=\"allowfullscreen\" webkitallowfullscreen mozallowfullscreen oallowfullscreen msallowfullscreen></iframe>\n            </div>\n            <div className='video-description'>\n                <h3 className='video-section-title'>Useful Links</h3>\n                {/* {externalLinkList} */}\n            </div>\n        </div>\n        );\n    }\n    else{\n        return(\n        <div className='video' id={props.src}>\n            <h3 className=\"video-section-title\">{props.videoTitle}</h3>\n            <div className=\"iframe-container\">\n                <iframe type=\"text/html\" frameborder=\"0\" allowfullscreen=\"\" src={srcFull} gesture=\"media\"  allow=\"encrypted-media\" frameborder=\"2\" allowfullscreen=\"allowfullscreen\" webkitallowfullscreen mozallowfullscreen oallowfullscreen msallowfullscreen></iframe>\n            </div>\n        </div>\n        );\n    }\n}\n\nexport default Video;"]},"metadata":{},"sourceType":"module"}